// import React, { useState } from 'react';

// const RegionDetails = ({ selectedRegion, districts, cities, onDistrictClick }) => {
//     if (!selectedRegion) return null;

//     // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞
//     const [showList, setShowList] = useState(true);

//     // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Ä–∞–π–æ–Ω –∏–ª–∏ –≥–æ—Ä–æ–¥
//     const handleDistrictClick = (district) => {
//         // setShowList(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ —Å–ø–∏—Å–∫–∞
//         onDistrictClick(district); // –ü–µ—Ä–µ–¥–∞—ë–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
//     };

//     return (
//         <div className="mb-4">
//             {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ */}
//             <div className="p-3 bg-blue-100 rounded">
//                 <h3 className="text-lg font-semibold">{selectedRegion.properties.name}</h3>
//                 <p class="text-lg">–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {selectedRegion.properties.population.toLocaleString()} —á–µ–ª.</p>
//                 <p class="text-lg">–ü–ª–æ—â–∞–¥—å: {selectedRegion.properties.area.toFixed(2)} –∫–º¬≤</p>
//                 <p class="text-lg">–ü–ª–æ—Ç–Ω–æ—Å—Ç—å: {(selectedRegion.properties.population / selectedRegion.properties.area).toFixed(1)} —á–µ–ª/–∫–º¬≤</p>
//                 <h4 className="text-lg font-semibold">–í —Å–æ—Å—Ç–∞–≤–µ –æ–±–ª–∞—Å—Ç–∏:</h4>
//                 <p class="text-lg">–ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –≥–æ—Ä–æ–¥–∞: {cities.length}</p>
//                 <p class="text-lg">–ö—Ä–∞—è: {districts.length}</p>
//             </div>

//             {/* –°–ø–∏—Å–æ–∫ –∫—Ä–∞—ë–≤ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ */}
//             {showList && (
//                 <div className="mt-4">
//                     <div className="scrollable-list" style={{ maxHeight: '300px', overflowY: 'auto' }}>
//                         <h5 className="font-semibold mt-2">üèûÔ∏è –ö—Ä–∞—è:</h5>
//                         <ul className="space-y-2">
//                             {districts.map(district => (
//                                 <li key={district.properties.id}>
//                                     <div
//                                         className="p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100"
//                                         onClick={() => handleDistrictClick(district)}
//                                     >
//                                         <p>{district.properties.name}</p>
//                                         <p>–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {district.properties.population.toLocaleString()} —á–µ–ª.</p>
//                                         <p>–ü–ª–æ—â–∞–¥—å: {district.properties.area.toFixed(2)} –∫–º¬≤</p>
//                                     </div>
//                                 </li>
//                             ))}
//                         </ul>

//                         <h5 className="font-semibold mt-2">üèôÔ∏è –ù–µ–∑–∞–≤–∏—Å–∏–º—ã–µ –≥–æ—Ä–æ–¥–∞:</h5>
//                         <ul className="space-y-2">
//                             {cities.map(city => (
//                                 <li key={city.properties.id}>
//                                     <div
//                                         className="p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100"
//                                         onClick={() => handleDistrictClick(city)}
//                                     >
//                                         <p>{city.properties.name}</p>
//                                         <p>–ù–∞—Å–µ–ª–µ–Ω–∏–µ: {city.properties.population.toLocaleString()} —á–µ–ª.</p>
//                                         <p>–ü–ª–æ—â–∞–¥—å: {city.properties.area.toFixed(2)} –∫–º¬≤</p>
//                                     </div>
//                                 </li>
//                             ))}
//                         </ul>
//                     </div>
//                 </div>
//             )}
//         </div>
//     );
// };

// export default RegionDetails;

import React, { useState } from 'react';
import ColorLegend from './ColorLegend';
import CityCirclesLegend from './CityCirclesLegend';

const RegionDetails = ({ selectedRegion, districts, cities, onDistrictClick, setSelectedDistrictCityInfo, selectedDistrictCityInfo, setSelectedRegionInfo, colorScale, currentCities, handleTabClick }) => {
    if (!selectedRegion) return null;

    // –°–æ—Å—Ç–æ—è–Ω–∏–µ –¥–ª—è —Å–∫—Ä—ã—Ç–∏—è/–ø–æ–∫–∞–∑–∞ —Å–ø–∏—Å–∫–∞
    const [showList, setShowList] = useState(true);

    // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∫–ª–∏–∫–∞ –Ω–∞ —Ä–∞–π–æ–Ω –∏–ª–∏ –≥–æ—Ä–æ–¥
    const handleDistrictClick = (district) => {
        // setShowList(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º —Å–∫—Ä–æ–ª–ª–∏–Ω–≥ —Å–ø–∏—Å–∫–∞
        onDistrictClick(district); // –ü–µ—Ä–µ–¥–∞—ë–º –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–∞–π–æ–Ω –≤ —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–∏–π –∫–æ–º–ø–æ–Ω–µ–Ω—Ç
    };
    const handleSwitchToDistrictsTab = () => {
        handleTabClick('districts'); // –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –Ω–∞ –≤–∫–ª–∞–¥–∫—É "–ö—Ä–∞—è"
    };

    return (
        <div className="mb-4">
            {/* –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ –≤—ã–±—Ä–∞–Ω–Ω–æ–π –æ–±–ª–∞—Å—Ç–∏ */}
            <div className="p-3 bg-blue-100 rounded">
                <h3 className="text-lg font-semibold">{selectedRegion.properties.name}</h3>
                <p className="text-base">Bev√∂lkerung: {selectedRegion.properties.population.toLocaleString()} Einw.</p>
                <p className="text-base">Fl√§che: {selectedRegion.properties.area.toFixed(2)} km¬≤</p>
                <p className="text-base">Bev√∂lkerungsdichte: {(selectedRegion.properties.population / selectedRegion.properties.area).toFixed(1)} Einw/km¬≤</p>
                <h4 className="text-base font-semibold">Als Teil des Bezirks:</h4>
                <p className="text-base">Kreisfreiest√§dte: {cities.length}</p>
                <p className="text-base">Landkreise: {districts.length}</p>
                {currentCities && ( // <---- –£–°–õ–û–í–ù–ê–Ø –æ—Ç—Ä–∏—Å–æ–≤–∫–∞, —á—Ç–æ–±—ã –Ω–µ –±—ã–ª–æ –æ—à–∏–±–∫–∏, –µ—Å–ª–∏ currentCities –≤–¥—Ä—É–≥ undefined
                    <p className="text-base">St√§dte / Gemeinde: {currentCities.length}</p>  //{/* <---- –û–¢–û–ë–†–ê–ñ–ê–ï–ú –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≥–æ—Ä–æ–¥–æ–≤ */}
                )}

                <ColorLegend colorScale={colorScale} />
                <CityCirclesLegend />
            </div>

            {/* –°–ø–∏—Å–æ–∫ –∫—Ä–∞—ë–≤ –∏ –Ω–µ–∑–∞–≤–∏—Å–∏–º—ã—Ö –≥–æ—Ä–æ–¥–æ–≤ */}
            {showList && (
                <div className="mt-2">
                    <div className="scrollable-list" style={{ maxHeight: '250px', overflowY: 'auto' }}>
                        <h5 className="font-semibold mt-2">üèûÔ∏è Landkreise:</h5>
                        <ul className="space-y-2">
                            {districts.map(district => (
                                <li key={district.properties.id}>
                                    <div
                                        className={`p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100 scrollable-list-item 
                                            ${selectedDistrictCityInfo?.properties.id === district.properties.id ? 'bg-teal-100 font-bold' : ''}`} // <----  –ö–õ–ê–°–°–´ TAILWIND –î–õ–Ø –í–´–î–ï–õ–ï–ù–ò–Ø
                                        onClick={() => {
                                            handleDistrictClick(district);
                                            setSelectedDistrictCityInfo(district);
                                            setSelectedRegionInfo(null);
                                        }}
                                    >
                                        <p>{district.properties.name}</p>
                                        <p>Bev√∂lkerung: {district.properties.population.toLocaleString()} Einw.</p>
                                        <p>Fl√§che: {district.properties.area.toFixed(2)} km¬≤</p>
                                    </div>
                                </li>
                            ))}
                        </ul>

                        <h5 className="font-semibold mt-2">üèôÔ∏è Kreisfreiest√§dte:</h5>
                        <ul className="space-y-2">
                            {cities.map(city => (
                                <li key={city.properties.id}>
                                    <div
                                        className={`p-2 bg-gray-50 rounded cursor-pointer hover:bg-gray-100 scrollable-list-item 
                                            ${selectedDistrictCityInfo?.properties.id === city.properties.id ? 'bg-teal-100 font-bold' : ''}`} // <----  –ö–õ–ê–°–°–´ TAILWIND –î–õ–Ø –í–´–î–ï–õ–ï–ù–ò–Ø
                                        onClick={() => {
                                            handleDistrictClick(city);
                                            setSelectedDistrictCityInfo(city);
                                            setSelectedRegionInfo(null);
                                        }}
                                    >
                                        <p>{city.properties.name}</p>
                                        <p>Bev√∂lkerung: {city.properties.population.toLocaleString()} Einw.</p>
                                        <p>Fl√§che: {city.properties.area.toFixed(2)} km¬≤</p>
                                    </div>
                                </li>
                            ))}
                        </ul>
                    </div>
                </div>
            )}
            <div className="region-tab-content p-2 text-center"> {/* –¶–µ–Ω—Ç—Ä–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç */}
                <h5 className="font-semibold mt-2">
                    <p
                        onClick={handleSwitchToDistrictsTab}
                        className="text-base cursor-pointer underline text-[#253494] hover:text-[#0C1130] transition-colors duration-200"
                    >
                        Hier klicken f√ºr weitere Informationen
                    </p>
                    <p className="text-base text-gray-700">St√§dte und Gemeinden des Kreises</p>
                </h5>
                {/* –î—Ä—É–≥–æ–π –∫–æ–Ω—Ç–µ–Ω—Ç –¥–ª—è –≤–∫–ª–∞–¥–∫–∏ "–û–±–ª–∞—Å—Ç–∏" */}
            </div>
        </div>
    );
};

export default RegionDetails;
